import os
import csv
import mysql.connector
import pandas as pd

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL
DB_CONFIG = {
    "host": "localhost",
    "user": "root",
    "password": "1234",  # –∏–∑–º–µ–Ω–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    "database": "uefa_champions_league_2025"
}

CSV_DIR = "csv"  # –ø–∞–ø–∫–∞ —Å csv —Ñ–∞–π–ª–∞–º–∏


def detect_delimiter(file_path):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ CSV"""
    with open(file_path, "r", encoding="utf-8", errors="ignore") as f:
        sample = f.read(2048)
        try:
            sniffer = csv.Sniffer()
            dialect = sniffer.sniff(sample, delimiters=[",", ";", "\t", "|"])
            return dialect.delimiter
        except Exception:
            return ","


def get_headers_and_data(file_path, delimiter):
    """–°—á–∏—Ç—ã–≤–∞–µ—Ç CSV –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ"""
    df = pd.read_csv(file_path, delimiter=delimiter, encoding="utf-8", engine="python")

    if df.empty:
        return [], []

    # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ ‚Üí –¥–µ–ª–∞–µ–º col1, col2...
    if any(str(col).startswith("Unnamed") for col in df.columns):
        df.columns = [f"col{i+1}" for i in range(len(df.columns))]

    # –ó–∞–º–µ–Ω—è–µ–º NaN ‚Üí None
    df = df.where(pd.notnull(df), None)

    return df.columns.tolist(), df.values.tolist()


def sql_type(value):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç SQL —Ç–∏–ø –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é"""
    if isinstance(value, (int, float)):
        return "DOUBLE"
    return "VARCHAR(255)"


def create_table(cursor, table_name, headers, sample_row):
    """–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É"""
    columns_sql = []
    for col, val in zip(headers, sample_row):
        col = col.replace(" ", "_").replace("-", "_")  # —É–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã/–¥–µ—Ñ–∏—Å—ã
        columns_sql.append(f"`{col}` {sql_type(val)}")
    columns_sql = ", ".join(columns_sql)

    cursor.execute(f"DROP TABLE IF EXISTS `{table_name}`;")
    cursor.execute(f"CREATE TABLE `{table_name}` ({columns_sql});")


def insert_data(cursor, table_name, headers, data):
    """–í—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É"""
    placeholders = ", ".join(["%s"] * len(headers))
    columns = ", ".join([f"`{col}`" for col in headers])
    sql = f"INSERT INTO `{table_name}` ({columns}) VALUES ({placeholders})"

    # –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º numpy.nan ‚Üí None
    clean_data = [[None if (isinstance(v, float) and pd.isna(v)) else v for v in row] for row in data]

    cursor.executemany(sql, clean_data)


def main():
    conn = mysql.connector.connect(**DB_CONFIG)
    cursor = conn.cursor()

    print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ. –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É CSV...\n")

    for file in os.listdir(CSV_DIR):
        if not file.endswith(".csv"):
            continue

        file_path = os.path.join(CSV_DIR, file)
        table_name = os.path.splitext(file)[0].lower()

        print(f"üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ {file}...")

        delimiter = detect_delimiter(file_path)
        headers, data = get_headers_and_data(file_path, delimiter)

        if not headers or not data:
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ {file}, –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")
            continue

        create_table(cursor, table_name, headers, data[0])
        insert_data(cursor, table_name, headers, data)

        conn.commit()
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table_name} —Å–æ–∑–¥–∞–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ ({len(data)} —Å—Ç—Ä–æ–∫).")

    cursor.close()
    conn.close()
    print("\nüéâ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")


if __name__ == "__main__":
    main()
